local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")

-- 初始化角色和根部件
local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- 创建控制锚点
local Folder = Instance.new("Folder", Workspace)
local AnchorPart = Instance.new("Part", Folder)
local Attachment1 = Instance.new("Attachment", AnchorPart)
AnchorPart.Anchored = true
AnchorPart.CanCollide = false
AnchorPart.Transparency = 1
AnchorPart.Size = Vector3.new(1, 1, 1)

-- 网络控制逻辑
if not getgenv().Network then
    getgenv().Network = {
        BaseParts = {},
        Velocity = Vector3.new(14.46262424, 14.46262424, 14.46262424)
    }

    Network.RetainPart = function(Part)
        if typeof(Part) == "Instance" and Part:IsA("BasePart") and Part:IsDescendantOf(Workspace) then
            table.insert(Network.BaseParts, Part)
            Part.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
            Part.CanCollide = false
        end
    end

    local function EnablePartControl()
        LocalPlayer.ReplicationFocus = Workspace
        RunService.Heartbeat:Connect(function()
            sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
            for _, Part in pairs(Network.BaseParts) do
                if Part:IsDescendantOf(Workspace) then
                    Part.Velocity = Network.Velocity
                end
            end
        end)
    end
    EnablePartControl()
end

-- 强制控制部件函数 - 修改为返回控制对象
local function ForcePart(v)
    if v:IsA("Part") and not v.Anchored and not v.Parent:FindFirstChild("Humanoid") and not v.Parent:FindFirstChild("Head") and v.Name ~= "Handle" then
        -- 清除现有的物理控制
        for _, x in next, v:GetChildren() do
            if x:IsA("BodyAngularVelocity") or x:IsA("BodyForce") or x:IsA("BodyGyro") or x:IsA("BodyPosition") or x:IsA("BodyThrust") or x:IsA("BodyVelocity") or x:IsA("RocketPropulsion") then
                x:Destroy()
            end
        end
        if v:FindFirstChild("Attachment") then
            v:FindFirstChild("Attachment"):Destroy()
        end
        if v:FindFirstChild("AlignPosition") then
            v:FindFirstChild("AlignPosition"):Destroy()
        end
        if v:FindFirstChild("Torque") then
            v:FindFirstChild("Torque"):Destroy()
        end

        v.CanCollide = false

        -- 添加扭矩控制旋转
        local Torque = Instance.new("Torque", v)
        Torque.Torque = Vector3.new(100000, 100000, 100000)

        -- 添加位置对齐控制
        local AlignPosition = Instance.new("AlignPosition", v)
        local Attachment2 = Instance.new("Attachment", v)

        Torque.Attachment0 = Attachment2
        AlignPosition.MaxForce = 999999999
        AlignPosition.MaxVelocity = math.huge
        AlignPosition.Responsiveness = 200
        AlignPosition.Attachment0 = Attachment2
        AlignPosition.Attachment1 = Attachment1

        return true, Torque, AlignPosition, Attachment2
    end
    return false
end

-- GUI界面
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "DarkRingControl"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 350, 0, 300)
MainFrame.Position = UDim2.new(0.5, -175, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- 圆角
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = MainFrame

-- 标题
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 50)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.Text = "球状环绕脚本"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 20
Title.Parent = MainFrame

-- 标题圆角
local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 20)
TitleCorner.Parent = Title

-- 主开关按钮
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0.8, 0, 0, 45)
ToggleButton.Position = UDim2.new(0.1, 0, 0.2, 0)
ToggleButton.Text = "环绕: 关闭"
ToggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 16
ToggleButton.Parent = MainFrame

local ToggleCorner = Instance.new("UICorner")
ToggleCorner.CornerRadius = UDim.new(0, 10)
ToggleCorner.Parent = ToggleButton

-- 速度控制
local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Size = UDim2.new(0.8, 0, 0, 25)
SpeedLabel.Position = UDim2.new(0.1, 0, 0.45, 0)
SpeedLabel.Text = "旋转速度: 50"
SpeedLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.Font = Enum.Font.Gotham
SpeedLabel.TextSize = 14
SpeedLabel.TextXAlignment = Enum.TextXAlignment.Left
SpeedLabel.Parent = MainFrame

local DecreaseSpeed = Instance.new("TextButton")
DecreaseSpeed.Size = UDim2.new(0.15, 0, 0, 30)
DecreaseSpeed.Position = UDim2.new(0.1, 0, 0.55, 0)
DecreaseSpeed.Text = "-"
DecreaseSpeed.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
DecreaseSpeed.TextColor3 = Color3.fromRGB(255, 255, 255)
DecreaseSpeed.Font = Enum.Font.GothamBold
DecreaseSpeed.TextSize = 18
DecreaseSpeed.Parent = MainFrame

local DecreaseCorner = Instance.new("UICorner")
DecreaseCorner.CornerRadius = UDim.new(0, 8)
DecreaseCorner.Parent = DecreaseSpeed

local IncreaseSpeed = Instance.new("TextButton")
IncreaseSpeed.Size = UDim2.new(0.15, 0, 0, 30)
IncreaseSpeed.Position = UDim2.new(0.75, 0, 0.55, 0)
IncreaseSpeed.Text = "+"
IncreaseSpeed.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
IncreaseSpeed.TextColor3 = Color3.fromRGB(255, 255, 255)
IncreaseSpeed.Font = Enum.Font.GothamBold
IncreaseSpeed.TextSize = 18
IncreaseSpeed.Parent = MainFrame

local IncreaseCorner = Instance.new("UICorner")
IncreaseCorner.CornerRadius = UDim.new(0, 8)
IncreaseCorner.Parent = IncreaseSpeed

local SpeedDisplay = Instance.new("TextLabel")
SpeedDisplay.Size = UDim2.new(0.5, 0, 0, 30)
SpeedDisplay.Position = UDim2.new(0.3, 0, 0.55, 0)
SpeedDisplay.Text = "50"
SpeedDisplay.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
SpeedDisplay.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedDisplay.Font = Enum.Font.Gotham
SpeedDisplay.TextSize = 16
SpeedDisplay.Parent = MainFrame

local SpeedDisplayCorner = Instance.new("UICorner")
SpeedDisplayCorner.CornerRadius = UDim.new(0, 8)
SpeedDisplayCorner.Parent = SpeedDisplay

-- 半径控制
local RadiusLabel = Instance.new("TextLabel")
RadiusLabel.Size = UDim2.new(0.8, 0, 0, 25)
RadiusLabel.Position = UDim2.new(0.1, 0, 0.7, 0)
RadiusLabel.Text = "环绕半径: 50"
RadiusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
RadiusLabel.BackgroundTransparency = 1
RadiusLabel.Font = Enum.Font.Gotham
RadiusLabel.TextSize = 14
RadiusLabel.TextXAlignment = Enum.TextXAlignment.Left
RadiusLabel.Parent = MainFrame

local DecreaseRadius = Instance.new("TextButton")
DecreaseRadius.Size = UDim2.new(0.15, 0, 0, 30)
DecreaseRadius.Position = UDim2.new(0.1, 0, 0.8, 0)
DecreaseRadius.Text = "-"
DecreaseRadius.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
DecreaseRadius.TextColor3 = Color3.fromRGB(255, 255, 255)
DecreaseRadius.Font = Enum.Font.GothamBold
DecreaseRadius.TextSize = 18
DecreaseRadius.Parent = MainFrame

local DecreaseRadiusCorner = Instance.new("UICorner")
DecreaseRadiusCorner.CornerRadius = UDim.new(0, 8)
DecreaseRadiusCorner.Parent = DecreaseRadius

local IncreaseRadius = Instance.new("TextButton")
IncreaseRadius.Size = UDim2.new(0.15, 0, 0, 30)
IncreaseRadius.Position = UDim2.new(0.75, 0, 0.8, 0)
IncreaseRadius.Text = "+"
IncreaseRadius.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
IncreaseRadius.TextColor3 = Color3.fromRGB(255, 255, 255)
IncreaseRadius.Font = Enum.Font.GothamBold
IncreaseRadius.TextSize = 18
IncreaseRadius.Parent = MainFrame

local IncreaseRadiusCorner = Instance.new("UICorner")
IncreaseRadiusCorner.CornerRadius = UDim.new(0, 8)
IncreaseRadiusCorner.Parent = IncreaseRadius

local RadiusDisplay = Instance.new("TextLabel")
RadiusDisplay.Size = UDim2.new(0.5, 0, 0, 30)
RadiusDisplay.Position = UDim2.new(0.3, 0, 0.8, 0)
RadiusDisplay.Text = "50"
RadiusDisplay.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
RadiusDisplay.TextColor3 = Color3.fromRGB(255, 255, 255)
RadiusDisplay.Font = Enum.Font.Gotham
RadiusDisplay.TextSize = 16
RadiusDisplay.Parent = MainFrame

local RadiusDisplayCorner = Instance.new("UICorner")
RadiusDisplayCorner.CornerRadius = UDim.new(0, 8)
RadiusDisplayCorner.Parent = RadiusDisplay

-- 水印
local Watermark = Instance.new("TextLabel")
Watermark.Size = UDim2.new(1, 0, 0, 20)
Watermark.Position = UDim2.new(0, 0, 1, -20)
Watermark.Text = "请在飞行状态下开启，关闭后有故障就重生-作者XTTT"
Watermark.TextColor3 = Color3.fromRGB(100, 100, 120)
Watermark.BackgroundTransparency = 1
Watermark.Font = Enum.Font.Gotham
Watermark.TextSize = 12
Watermark.Parent = MainFrame

-- 最小化按钮
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 25, 0, 25)
MinimizeButton.Position = UDim2.new(1, -30, 0, 10)
MinimizeButton.Text = "-"
MinimizeButton.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextSize = 18
MinimizeButton.Parent = MainFrame

local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 12)
MinimizeCorner.Parent = MinimizeButton

-- 环绕控制变量
local ringPartsEnabled = false
local rotationSpeed = 50
local ringRadius = 50
local controlledParts = {} -- 现在存储控制对象：{part = {Torque, AlignPosition, Attachment}}

-- 更新锚点位置函数
local function updateAnchorPosition()
    local humanoidRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if humanoidRootPart then
        -- 让锚点跟随玩家但保持一定距离，形成环绕效果
        local center = humanoidRootPart.Position
        local time = tick()

        -- 计算锚点的环绕位置
        local orbitX = center.X + math.cos(time * rotationSpeed * 0.1) * ringRadius
        local orbitZ = center.Z + math.sin(time * rotationSpeed * 0.1) * ringRadius

        AnchorPart.Position = Vector3.new(orbitX, center.Y + 2, orbitZ)
    end
end

-- 控制部件函数 - 修改为存储控制对象
local function controlPart(part)
    local success, torque, alignPos, attachment = ForcePart(part)
    if success then
        controlledParts[part] = {
            Torque = torque,
            AlignPosition = alignPos,
            Attachment = attachment
        }
        Network.RetainPart(part)
        return true
    end
    return false
end

-- 清理部件控制函数（新增的关键函数）
local function cleanupPartControl(part)
    if controlledParts[part] then
        -- 移除所有添加的物理控制
        local controls = controlledParts[part]
        if controls.Torque and controls.Torque.Parent then
            controls.Torque:Destroy()
        end
        if controls.AlignPosition and controls.AlignPosition.Parent then
            controls.AlignPosition:Destroy()
        end
        if controls.Attachment and controls.Attachment.Parent then
            controls.Attachment:Destroy()
        end
        
        -- 恢复部件的原始属性
        part.CanCollide = true
        part.CustomPhysicalProperties = nil
        
        -- 从网络控制中移除
        local index = table.find(Network.BaseParts, part)
        if index then
            table.remove(Network.BaseParts, index)
        end
        
        controlledParts[part] = nil
    end
end

-- 清理所有控制（新增的关键函数）
local function cleanupAllControls()
    for part, _ in pairs(controlledParts) do
        cleanupPartControl(part)
    end
end

-- 初始化控制部件
local function initializeParts()
    for _, part in pairs(Workspace:GetDescendants()) do
        if part:IsA("Part") and not part.Anchored and not controlledParts[part] and not part.Parent:FindFirstChild("Humanoid") and not part.Parent:FindFirstChild("Head") and part.Name ~= "Handle" then
            controlPart(part)
        end
    end
end

-- 主循环
RunService.Heartbeat:Connect(function()
    if not ringPartsEnabled then return end

    -- 更新锚点位置
    updateAnchorPosition()

    -- 持续控制新出现的部件
    for _, part in pairs(Workspace:GetDescendants()) do
        if part:IsA("Part") and not part.Anchored and not controlledParts[part] and not part.Parent:FindFirstChild("Humanoid") and not part.Parent:FindFirstChild("Head") and part.Name ~= "Handle" then
            controlPart(part)
        end
    end
end)

-- 按钮功能
ToggleButton.MouseButton1Click:Connect(function()
    ringPartsEnabled = not ringPartsEnabled
    ToggleButton.Text = ringPartsEnabled and "环绕: 开启" or "环绕: 关闭"
    ToggleButton.BackgroundColor3 = ringPartsEnabled and Color3.fromRGB(50, 200, 50) or Color3.fromRGB(200, 50, 50)

    if ringPartsEnabled then
        initializeParts()
    else
        -- 关闭时彻底清理所有控制
        cleanupAllControls()
    end
end)

DecreaseSpeed.MouseButton1Click:Connect(function()
    rotationSpeed = math.max(1, rotationSpeed - 5)
    SpeedDisplay.Text = rotationSpeed
    SpeedLabel.Text = "旋转速度: " .. rotationSpeed
end)

IncreaseSpeed.MouseButton1Click:Connect(function()
    rotationSpeed = math.min(100, rotationSpeed + 5)
    SpeedDisplay.Text = rotationSpeed
    SpeedLabel.Text = "旋转速度: " .. rotationSpeed
end)

DecreaseRadius.MouseButton1Click:Connect(function()
    ringRadius = math.max(5, ringRadius - 5)
    RadiusDisplay.Text = ringRadius
    RadiusLabel.Text = "环绕半径: " .. ringRadius
end)

IncreaseRadius.MouseButton1Click:Connect(function()
    ringRadius = math.min(100, ringRadius + 5)
    RadiusDisplay.Text = ringRadius
    RadiusLabel.Text = "环绕半径: " .. ringRadius
end)

-- 最小化功能
local minimized = false
MinimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        MainFrame:TweenSize(UDim2.new(0, 350, 0, 50), "Out", "Quad", 0.3, true)
        MinimizeButton.Text = "+"
        ToggleButton.Visible = false
        SpeedLabel.Visible = false
        DecreaseSpeed.Visible = false
        IncreaseSpeed.Visible = false
        SpeedDisplay.Visible = false
        RadiusLabel.Visible = false
        DecreaseRadius.Visible = false
        IncreaseRadius.Visible = false
        RadiusDisplay.Visible = false
        Watermark.Visible = false
    else
        MainFrame:TweenSize(UDim2.new(0, 350, 0, 300), "Out", "Quad", 0.3, true)
        MinimizeButton.Text = "-"
        ToggleButton.Visible = true
        SpeedLabel.Visible = true
        DecreaseSpeed.Visible = true
        IncreaseSpeed.Visible = true
        SpeedDisplay.Visible = true
        RadiusLabel.Visible = true
        DecreaseRadius.Visible = true
        IncreaseRadius.Visible = true
        RadiusDisplay.Visible = true
        Watermark.Visible = true
    end
end)

-- GUI拖动功能
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- 角色重新生成时重新初始化
LocalPlayer.CharacterAdded:Connect(function(character)
    character:WaitForChild("HumanoidRootPart")
    if ringPartsEnabled then
        initializeParts()
    end
end)