local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local SoundService = game:GetService("SoundService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer

-- 自定义 delay 函数
local function delay(time, callback)
    local start = tick()
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if tick() - start >= time then
            connection:Disconnect()
            callback()
        end
    end)
end

-- 自定义 table.find 函数
local function tableFind(t, value)
    for i, v in ipairs(t) do
        if v == value then
            return i
        end
    end
    return nil
end

-- 音效函数
local function playSound(soundId)
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Parent = SoundService
    sound:Play()
    sound.Ended:Connect(function()
        sound:Destroy()
    end)
end

-- GUI界面
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "DarkRingControl"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- 主容器
local MainContainer = Instance.new("Frame")
MainContainer.Size = UDim2.new(0, 350, 0, 450)
MainContainer.Position = UDim2.new(0.5, -175, 0.5, -225)
MainContainer.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
MainContainer.BorderSizePixel = 0
MainContainer.Parent = ScreenGui

-- 发光边框
local BorderGlow = Instance.new("UIStroke")
BorderGlow.Color = Color3.fromRGB(0, 150, 255)
BorderGlow.Thickness = 3
BorderGlow.Transparency = 0.3
BorderGlow.Parent = MainContainer

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainContainer

-- 标题栏
local Header = Instance.new("Frame")
Header.Size = UDim2.new(1, 0, 0, 60)
Header.Position = UDim2.new(0, 0, 0, 0)
Header.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
Header.BorderSizePixel = 0
Header.Parent = MainContainer

local HeaderCorner = Instance.new("UICorner")
HeaderCorner.CornerRadius = UDim.new(0, 12)
HeaderCorner.Parent = Header

local HeaderGradient = Instance.new("UIGradient")
HeaderGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 100, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 200, 255))
})
HeaderGradient.Rotation = 45
HeaderGradient.Parent = Header

-- 标题
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -20, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.Text = "开始召唤魂环"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1
Title.Font = Enum.Font.GothamBold
Title.TextSize = 18
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = Header

local SubTitle = Instance.new("TextLabel")
SubTitle.Size = UDim2.new(1, -20, 0, 20)
SubTitle.Position = UDim2.new(0, 10, 0, 35)
SubTitle.Text = "魂环控制系统"
SubTitle.TextColor3 = Color3.fromRGB(200, 200, 200)
SubTitle.BackgroundTransparency = 1
SubTitle.Font = Enum.Font.Gotham
SubTitle.TextSize = 12
SubTitle.TextXAlignment = Enum.TextXAlignment.Left
SubTitle.Parent = Header

-- 控制容器
local ControlsContainer = Instance.new("Frame")
ControlsContainer.Size = UDim2.new(1, -20, 1, -80)
ControlsContainer.Position = UDim2.new(0, 10, 0, 70)
ControlsContainer.BackgroundTransparency = 1
ControlsContainer.Parent = MainContainer

-- 主开关按钮
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(1, 0, 0, 50)
ToggleButton.Position = UDim2.new(0, 0, 0, 0)
ToggleButton.Text = "魂环: 关闭"
ToggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
ToggleButton.TextColor3 = Color3.fromRGB(255, 50, 50)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 16
ToggleButton.Parent = ControlsContainer

local ToggleCorner = Instance.new("UICorner")
ToggleCorner.CornerRadius = UDim.new(0, 8)
ToggleCorner.Parent = ToggleButton

local ToggleStroke = Instance.new("UIStroke")
ToggleStroke.Color = Color3.fromRGB(50, 50, 60)
ToggleStroke.Thickness = 2
ToggleStroke.Parent = ToggleButton

-- 速度控制
local SpeedSection = Instance.new("Frame")
SpeedSection.Size = UDim2.new(1, 0, 0, 100)
SpeedSection.Position = UDim2.new(0, 0, 0, 70)
SpeedSection.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
SpeedSection.Parent = ControlsContainer

local SpeedCorner = Instance.new("UICorner")
SpeedCorner.CornerRadius = UDim.new(0, 8)
SpeedCorner.Parent = SpeedSection

local SpeedStroke = Instance.new("UIStroke")
SpeedStroke.Color = Color3.fromRGB(50, 50, 60)
SpeedStroke.Thickness = 2
SpeedStroke.Parent = SpeedSection

local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Size = UDim2.new(1, -20, 0, 25)
SpeedLabel.Position = UDim2.new(0, 10, 0, 5)
SpeedLabel.Text = "旋转速度: 50"
SpeedLabel.TextColor3 = Color3.fromRGB(0, 200, 255)
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.Font = Enum.Font.Gotham
SpeedLabel.TextSize = 14
SpeedLabel.TextXAlignment = Enum.TextXAlignment.Left
SpeedLabel.Parent = SpeedSection

-- 速度调整滑块
local SpeedSlider = Instance.new("Frame")
SpeedSlider.Size = UDim2.new(1, -20, 0, 30)
SpeedSlider.Position = UDim2.new(0, 10, 0, 35)
SpeedSlider.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
SpeedSlider.Parent = SpeedSection

local SpeedSliderCorner = Instance.new("UICorner")
SpeedSliderCorner.CornerRadius = UDim.new(0, 15)
SpeedSliderCorner.Parent = SpeedSlider

local SpeedFill = Instance.new("Frame")
SpeedFill.Size = UDim2.new(0.5, 0, 1, 0)
SpeedFill.Position = UDim2.new(0, 0, 0, 0)
SpeedFill.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
SpeedFill.Parent = SpeedSlider

local SpeedFillCorner = Instance.new("UICorner")
SpeedFillCorner.CornerRadius = UDim.new(0, 15)
SpeedFillCorner.Parent = SpeedFill

local SpeedKnob = Instance.new("TextButton")
SpeedKnob.Size = UDim2.new(0, 20, 0, 20)
SpeedKnob.Position = UDim2.new(0.5, -10, 0.5, -10)
SpeedKnob.Text = ""
SpeedKnob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SpeedKnob.Parent = SpeedSlider

local SpeedKnobCorner = Instance.new("UICorner")
SpeedKnobCorner.CornerRadius = UDim.new(1, 0)
SpeedKnobCorner.Parent = SpeedKnob

-- 魂环大小控制
local SizeSection = Instance.new("Frame")
SizeSection.Size = UDim2.new(1, 0, 0, 100)
SizeSection.Position = UDim2.new(0, 0, 0, 185)
SizeSection.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
SizeSection.Parent = ControlsContainer

local SizeCorner = Instance.new("UICorner")
SizeCorner.CornerRadius = UDim.new(0, 8)
SizeCorner.Parent = SizeSection

local SizeStroke = Instance.new("UIStroke")
SizeStroke.Color = Color3.fromRGB(50, 50, 60)
SizeStroke.Thickness = 2
SizeStroke.Parent = SizeSection

local SizeLabel = Instance.new("TextLabel")
SizeLabel.Size = UDim2.new(1, -20, 0, 25)
SizeLabel.Position = UDim2.new(0, 10, 0, 5)
SizeLabel.Text = "环绕半径: 50"
SizeLabel.TextColor3 = Color3.fromRGB(0, 200, 255)
SizeLabel.BackgroundTransparency = 1
SizeLabel.Font = Enum.Font.Gotham
SizeLabel.TextSize = 14
SizeLabel.TextXAlignment = Enum.TextXAlignment.Left
SizeLabel.Parent = SizeSection

local SizeSlider = Instance.new("Frame")
SizeSlider.Size = UDim2.new(1, -20, 0, 30)
SizeSlider.Position = UDim2.new(0, 10, 0, 35)
SizeSlider.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
SizeSlider.Parent = SizeSection

local SizeSliderCorner = Instance.new("UICorner")
SizeSliderCorner.CornerRadius = UDim.new(0, 15)
SizeSliderCorner.Parent = SizeSlider

local SizeFill = Instance.new("Frame")
SizeFill.Size = UDim2.new(0.5, 0, 1, 0)
SizeFill.Position = UDim2.new(0, 0, 0, 0)
SizeFill.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
SizeFill.Parent = SizeSlider

local SizeFillCorner = Instance.new("UICorner")
SizeFillCorner.CornerRadius = UDim.new(0, 15)
SizeFillCorner.Parent = SizeFill

local SizeKnob = Instance.new("TextButton")
SizeKnob.Size = UDim2.new(0, 20, 0, 20)
SizeKnob.Position = UDim2.new(0.5, -10, 0.5, -10)
SizeKnob.Text = ""
SizeKnob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SizeKnob.Parent = SizeSlider

local SizeKnobCorner = Instance.new("UICorner")
SizeKnobCorner.CornerRadius = UDim.new(1, 0)
SizeKnobCorner.Parent = SizeKnob

-- 最小化按钮
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(1, -35, 0, 15)
MinimizeButton.Text = "-"
MinimizeButton.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextSize = 18
MinimizeButton.Parent = Header

local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(1, 0)
MinimizeCorner.Parent = MinimizeButton

-- 页脚
local Footer = Instance.new("TextLabel")
Footer.Size = UDim2.new(1, 0, 0, 30)
Footer.Position = UDim2.new(0, 0, 1, -30)
Footer.Text = "成为封号斗罗脚本-作者XTTT"
Footer.TextColor3 = Color3.fromRGB(100, 100, 120)
Footer.BackgroundTransparency = 1
Footer.Font = Enum.Font.Gotham
Footer.TextSize = 12
Footer.Parent = ControlsContainer

-- 魂环控制变量
local ringPartsEnabled = false
local rotationSpeed = 50  -- 0-100 scale
local ringRadius = 50     -- 0-100 scale
local height = 100
local attractionStrength = 1000

local parts = {}

local function RetainPart(Part)
    if Part:IsA("BasePart") and not Part.Anchored and Part:IsDescendantOf(workspace) then
        if Part.Parent == LocalPlayer.Character or Part:IsDescendantOf(LocalPlayer.Character) then
            return false
        end
        Part.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
        Part.CanCollide = false
        return true
    end
    return false
end

local function addPart(part)
    if RetainPart(part) then
        if not tableFind(parts, part) then
            table.insert(parts, part)
        end
    end
end

local function removePart(part)
    local index = tableFind(parts, part)
    if index then
        table.remove(parts, index)
    end
end

-- 初始化部件
for _, part in pairs(workspace:GetDescendants()) do
    addPart(part)
end

workspace.DescendantAdded:Connect(addPart)
workspace.DescendantRemoving:Connect(removePart)

-- 主环绕效果循环
RunService.Heartbeat:Connect(function()
    if not ringPartsEnabled then return end

    local humanoidRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if humanoidRootPart then
        local tornadoCenter = humanoidRootPart.Position
        local actualRadius = ringRadius * 10  -- 将0-100比例转换为0-1000
        local actualSpeed = rotationSpeed * 0.1  -- 将0-100比例转换为0-10

        for _, part in pairs(parts) do
            if part.Parent and not part.Anchored then
                local pos = part.Position
                local distance = (Vector3.new(pos.X, tornadoCenter.Y, pos.Z) - tornadoCenter).Magnitude
                local angle = math.atan2(pos.Z - tornadoCenter.Z, pos.X - tornadoCenter.X)
                local newAngle = angle + math.rad(actualSpeed)

                local targetPos = Vector3.new(
                    tornadoCenter.X + math.cos(newAngle) * math.min(actualRadius, distance),
                    tornadoCenter.Y + (height * (math.abs(math.sin((pos.Y - tornadoCenter.Y) / height)))),
                    tornadoCenter.Z + math.sin(newAngle) * math.min(actualRadius, distance)
                )

                local directionToTarget = (targetPos - part.Position).unit
                part.Velocity = directionToTarget * attractionStrength
            end
        end
    end
end)

-- 滑块控制函数
local function updateSpeedSlider(value)
    rotationSpeed = math.clamp(value, 0, 100)
    SpeedLabel.Text = "旋转速度: " .. rotationSpeed
    SpeedFill.Size = UDim2.new(rotationSpeed / 100, 0, 1, 0)
    SpeedKnob.Position = UDim2.new(rotationSpeed / 100, -10, 0.5, -10)
end

local function updateSizeSlider(value)
    ringRadius = math.clamp(value, 0, 100)
    SizeLabel.Text = "环绕半径: " .. ringRadius
    SizeFill.Size = UDim2.new(ringRadius / 100, 0, 1, 0)
    SizeKnob.Position = UDim2.new(ringRadius / 100, -10, 0.5, -10)
end

-- 滑块交互逻辑
local function setupSlider(slider, knob, fill, updateFunction)
    local dragging = false

    local function updateSlider(input)
        local sliderAbsolutePosition = slider.AbsolutePosition.X
        local sliderAbsoluteSize = slider.AbsoluteSize.X
        local mouseX = input.Position.X

        local relativeX = math.clamp(mouseX - sliderAbsolutePosition, 0, sliderAbsoluteSize)
        local percentage = relativeX / sliderAbsoluteSize

        updateFunction(math.floor(percentage * 100))
    end

    knob.MouseButton1Down:Connect(function()
        dragging = true
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            updateSlider(input)
        end
    end)

    slider.MouseButton1Down:Connect(function(input)
        updateSlider(input)
        dragging = true
    end)
end

-- 设置滑块
setupSlider(SpeedSlider, SpeedKnob, SpeedFill, updateSpeedSlider)
setupSlider(SizeSlider, SizeKnob, SizeFill, updateSizeSlider)

-- 初始化滑块值
updateSpeedSlider(50)
updateSizeSlider(50)

-- 按钮切换功能
ToggleButton.MouseButton1Click:Connect(function()
    ringPartsEnabled = not ringPartsEnabled

    if ringPartsEnabled then
        ToggleButton.Text = "魂环: 开启"
        ToggleButton.TextColor3 = Color3.fromRGB(50, 255, 50)

        -- 启用时的发光效果
        local enabledGlow = Instance.new("UIStroke")
        enabledGlow.Color = Color3.fromRGB(0, 255, 0)
        enabledGlow.Thickness = 3
        enabledGlow.Transparency = 0.5
        enabledGlow.Parent = ToggleButton

        -- 1秒后移除发光效果
        delay(1, function()
            if enabledGlow then
                enabledGlow:Destroy()
            end
        end)
    else
        ToggleButton.Text = "魂环: 关闭"
        ToggleButton.TextColor3 = Color3.fromRGB(255, 50, 50)
    end
    
    playSound("12221967")
end)

-- 最小化功能
local minimized = false
MinimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        MainContainer:TweenSize(UDim2.new(0, 350, 0, 60), "Out", "Quad", 0.3, true)
        MinimizeButton.Text = "+"
        ControlsContainer.Visible = false
    else
        MainContainer:TweenSize(UDim2.new(0, 350, 0, 450), "Out", "Quad", 0.3, true)
        MinimizeButton.Text = "-"
        ControlsContainer.Visible = true
    end
    playSound("12221967")
end)

-- GUI拖动功能
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    MainContainer.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainContainer.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Header.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- 播放初始音效
playSound("2865227271")