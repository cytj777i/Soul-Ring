local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local SoundService = game:GetService("SoundService")
local StarterGui = game:GetService("StarterGui")
local TextChatService = game:GetService("TextChatService")
local LocalPlayer = Players.LocalPlayer

-- 创建GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SuperRingPartsGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 250, 0, 250)
MainFrame.Position = UDim2.new(0.5, -125, 0.5, -125)
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20) -- 黑色背景
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- 圆角效果
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 15)
UICorner.Parent = MainFrame

-- 添加发光效果
local UIStroke = Instance.new("UIStroke")
UIStroke.Color = Color3.fromRGB(0, 150, 255) -- 蓝色边框
UIStroke.Thickness = 2
UIStroke.Parent = MainFrame

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 40)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.Text = "XTTT魂环召唤脚本"
Title.TextColor3 = Color3.fromRGB(0, 150, 255) -- 蓝色文字
Title.BackgroundColor3 = Color3.fromRGB(30, 30, 30) -- 深灰色背景
Title.Font = Enum.Font.GothamBold
Title.TextSize = 20
Title.Parent = MainFrame

-- 标题圆角
local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 15)
TitleCorner.Parent = Title

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0.8, 0, 0, 35)
ToggleButton.Position = UDim2.new(0.1, 0, 0.2, 0)
ToggleButton.Text = "环绕关闭"
ToggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50) -- 红色
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色
ToggleButton.Font = Enum.Font.Gotham
ToggleButton.TextSize = 16
ToggleButton.Parent = MainFrame

-- 切换按钮圆角
local ToggleCorner = Instance.new("UICorner")
ToggleCorner.CornerRadius = UDim.new(0, 8)
ToggleCorner.Parent = ToggleButton

-- 半径控制
local RadiusLabel = Instance.new("TextLabel")
RadiusLabel.Size = UDim2.new(0.8, 0, 0, 20)
RadiusLabel.Position = UDim2.new(0.1, 0, 0.4, 0)
RadiusLabel.Text = "环绕半径"
RadiusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
RadiusLabel.BackgroundTransparency = 1
RadiusLabel.Font = Enum.Font.Gotham
RadiusLabel.TextSize = 14
RadiusLabel.Parent = MainFrame

local DecreaseRadius = Instance.new("TextButton")
DecreaseRadius.Size = UDim2.new(0.2, 0, 0, 30)
DecreaseRadius.Position = UDim2.new(0.1, 0, 0.5, 0)
DecreaseRadius.Text = "-"
DecreaseRadius.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
DecreaseRadius.TextColor3 = Color3.fromRGB(255, 255, 255)
DecreaseRadius.Font = Enum.Font.GothamBold
DecreaseRadius.TextSize = 18
DecreaseRadius.Parent = MainFrame

local IncreaseRadius = Instance.new("TextButton")
IncreaseRadius.Size = UDim2.new(0.2, 0, 0, 30)
IncreaseRadius.Position = UDim2.new(0.7, 0, 0.5, 0)
IncreaseRadius.Text = "+"
IncreaseRadius.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
IncreaseRadius.TextColor3 = Color3.fromRGB(255, 255, 255)
IncreaseRadius.Font = Enum.Font.GothamBold
IncreaseRadius.TextSize = 18
IncreaseRadius.Parent = MainFrame

local RadiusDisplay = Instance.new("TextLabel")
RadiusDisplay.Size = UDim2.new(0.4, 0, 0, 30)
RadiusDisplay.Position = UDim2.new(0.3, 0, 0.5, 0)
RadiusDisplay.Text = "50"
RadiusDisplay.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
RadiusDisplay.TextColor3 = Color3.fromRGB(0, 150, 255)
RadiusDisplay.Font = Enum.Font.Gotham
RadiusDisplay.TextSize = 16
RadiusDisplay.Parent = MainFrame

-- 半径显示圆角
local RadiusCorner = Instance.new("UICorner")
RadiusCorner.CornerRadius = UDim.new(0, 8)
RadiusCorner.Parent = RadiusDisplay

-- 速度控制
local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Size = UDim2.new(0.8, 0, 0, 20)
SpeedLabel.Position = UDim2.new(0.1, 0, 0.65, 0)
SpeedLabel.Text = "环绕速度"
SpeedLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.Font = Enum.Font.Gotham
SpeedLabel.TextSize = 14
SpeedLabel.Parent = MainFrame

local DecreaseSpeed = Instance.new("TextButton")
DecreaseSpeed.Size = UDim2.new(0.2, 0, 0, 30)
DecreaseSpeed.Position = UDim2.new(0.1, 0, 0.75, 0)
DecreaseSpeed.Text = "-"
DecreaseSpeed.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
DecreaseSpeed.TextColor3 = Color3.fromRGB(255, 255, 255)
DecreaseSpeed.Font = Enum.Font.GothamBold
DecreaseSpeed.TextSize = 18
DecreaseSpeed.Parent = MainFrame

local IncreaseSpeed = Instance.new("TextButton")
IncreaseSpeed.Size = UDim2.new(0.2, 0, 0, 30)
IncreaseSpeed.Position = UDim2.new(0.7, 0, 0.75, 0)
IncreaseSpeed.Text = "+"
IncreaseSpeed.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
IncreaseSpeed.TextColor3 = Color3.fromRGB(255, 255, 255)
IncreaseSpeed.Font = Enum.Font.GothamBold
IncreaseSpeed.TextSize = 18
IncreaseSpeed.Parent = MainFrame

local SpeedDisplay = Instance.new("TextLabel")
SpeedDisplay.Size = UDim2.new(0.4, 0, 0, 30)
SpeedDisplay.Position = UDim2.new(0.3, 0, 0.75, 0)
SpeedDisplay.Text = "1"
SpeedDisplay.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
SpeedDisplay.TextColor3 = Color3.fromRGB(0, 150, 255)
SpeedDisplay.Font = Enum.Font.Gotham
SpeedDisplay.TextSize = 16
SpeedDisplay.Parent = MainFrame

-- 速度显示圆角
local SpeedCorner = Instance.new("UICorner")
SpeedCorner.CornerRadius = UDim.new(0, 8)
SpeedCorner.Parent = SpeedDisplay

local Watermark = Instance.new("TextLabel")
Watermark.Size = UDim2.new(1, 0, 0, 20)
Watermark.Position = UDim2.new(0, 0, 1, -20)
Watermark.Text = "开启后请保持在飞行模式下，不然会有bug"
Watermark.TextColor3 = Color3.fromRGB(100, 100, 100)
Watermark.BackgroundTransparency = 1
Watermark.Font = Enum.Font.Gotham
Watermark.TextSize = 12
Watermark.Parent = MainFrame

-- 添加最小化按钮
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 25, 0, 25)
MinimizeButton.Position = UDim2.new(1, -30, 0, 5)
MinimizeButton.Text = "-"
MinimizeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextSize = 16
MinimizeButton.Parent = MainFrame

-- 最小化按钮圆角
local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 12)
MinimizeCorner.Parent = MinimizeButton

-- 最小化功能
local minimized = false
MinimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        MainFrame:TweenSize(UDim2.new(0, 250, 0, 40), "Out", "Quad", 0.3, true)
        MinimizeButton.Text = "+"
        ToggleButton.Visible = false
        RadiusLabel.Visible = false
        DecreaseRadius.Visible = false
        IncreaseRadius.Visible = false
        RadiusDisplay.Visible = false
        SpeedLabel.Visible = false
        DecreaseSpeed.Visible = false
        IncreaseSpeed.Visible = false
        SpeedDisplay.Visible = false
        Watermark.Visible = false
    else
        MainFrame:TweenSize(UDim2.new(0, 250, 0, 250), "Out", "Quad", 0.3, true)
        MinimizeButton.Text = "-"
        ToggleButton.Visible = true
        RadiusLabel.Visible = true
        DecreaseRadius.Visible = true
        IncreaseRadius.Visible = true
        RadiusDisplay.Visible = true
        SpeedLabel.Visible = true
        DecreaseSpeed.Visible = true
        IncreaseSpeed.Visible = true
        SpeedDisplay.Visible = true
        Watermark.Visible = true
    end
end)

-- 使GUI可拖动
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- 环绕零件逻辑
if not getgenv().Network then
    getgenv().Network = {
        BaseParts = {},
        Velocity = Vector3.new(14.46262424, 14.46262424, 14.46262424)
    }
    
    Network.RetainPart = function(Part)
        if typeof(Part) == "Instance" and Part:IsA("BasePart") and Part:IsDescendantOf(workspace) then
            table.insert(Network.BaseParts, Part)
            Part.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
            Part.CanCollide = false
        end
    end
    
    local function EnablePartControl()
        LocalPlayer.ReplicationFocus = workspace
        RunService.Heartbeat:Connect(function()
            sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
            for _, Part in pairs(Network.BaseParts) do
                if Part:IsDescendantOf(workspace) then
                    Part.Velocity = Network.Velocity
                end
            end
        end)
    end
    
    EnablePartControl()
end

local radius = 50
local height = 100
-- 速度系统78出错了但能正常玩就行
local speedValue = 1  -- 速度值（1-100）
local rotationSpeed = 12  -- 实际旋转速度（度/秒）：速度1 = 12度/秒 = 30秒一圈
local attractionStrength = 1000
local ringPartsEnabled = false

local function RetainPart(Part)
    if Part:IsA("BasePart") and not Part.Anchored and Part:IsDescendantOf(workspace) then
        if Part.Parent == LocalPlayer.Character or Part:IsDescendantOf(LocalPlayer.Character) then
            return false
        end
        Part.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
        Part.CanCollide = false
        return true
    end
    return false
end

local parts = {}

local function addPart(part)
    if RetainPart(part) then
        if not table.find(parts, part) then
            table.insert(parts, part)
        end
    end
end

local function removePart(part)
    local index = table.find(parts, part)
    if index then
        table.remove(parts, index)
    end
end

-- 初始化已存在的零件
for _, part in pairs(workspace:GetDescendants()) do
    addPart(part)
end

workspace.DescendantAdded:Connect(addPart)
workspace.DescendantRemoving:Connect(removePart)

-- 添加时间累积变量用于平滑旋转
local rotationAccumulator = 0

RunService.Heartbeat:Connect(function(deltaTime)
    if not ringPartsEnabled then
        return
    end
    
    local humanoidRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if humanoidRootPart then
        local tornadoCenter = humanoidRootPart.Position
        
        -- 累积旋转角度（基于时间）
        rotationAccumulator = rotationAccumulator + math.rad(rotationSpeed) * deltaTime
        
        for _, part in pairs(parts) do
            if part.Parent and not part.Anchored then
                local pos = part.Position
                local distance = (Vector3.new(pos.X, tornadoCenter.Y, pos.Z) - tornadoCenter).Magnitude
                local angle = math.atan2(pos.Z - tornadoCenter.Z, pos.X - tornadoCenter.X)
                
                -- 使用累积的角度而不是每帧固定增量
                local newAngle = angle + rotationAccumulator
                
                local targetPos = Vector3.new(
                    tornadoCenter.X + math.cos(newAngle) * math.min(radius, distance),
                    tornadoCenter.Y + (height * (math.abs(math.sin((pos.Y - tornadoCenter.Y) / height)))),
                    tornadoCenter.Z + math.sin(newAngle) * math.min(radius, distance)
                )
                
                local directionToTarget = (targetPos - part.Position).unit
                part.Velocity = directionToTarget * attractionStrength
            end
        end
    end
end)

-- 按钮功能
ToggleButton.MouseButton1Click:Connect(function()
    ringPartsEnabled = not ringPartsEnabled
    ToggleButton.Text = ringPartsEnabled and "开始召唤" or "取消召唤"
    ToggleButton.BackgroundColor3 = ringPartsEnabled and Color3.fromRGB(50, 200, 50) or Color3.fromRGB(200, 50, 50)
end)

-- 半径控制
DecreaseRadius.MouseButton1Click:Connect(function()
    radius = math.max(10, radius - 5)
    RadiusDisplay.Text = tostring(radius)
end)

IncreaseRadius.MouseButton1Click:Connect(function()
    radius = math.min(100, radius + 5)
    RadiusDisplay.Text = tostring(radius)
end)

-- 速度控制 (1-100范围，1速度=30秒一圈，2速度=15秒一圈，以此类推)
DecreaseSpeed.MouseButton1Click:Connect(function()
    speedValue = math.max(1, speedValue - 1)
    rotationSpeed = 12 * speedValue  -- 转换为实际的旋转速度（度/秒）
    SpeedDisplay.Text = tostring(speedValue)
end)

IncreaseSpeed.MouseButton1Click:Connect(function()
    speedValue = math.min(100, speedValue + 1)
    rotationSpeed = 12 * speedValue  -- 转换为实际的旋转速度（度/秒）
    SpeedDisplay.Text = tostring(speedValue)
end)

-- 通知
StarterGui:SetCore("SendNotification", {
    Title = "XTTT魂环召唤脚本",
    Text = "已加载成功！",
    Duration = 3
})